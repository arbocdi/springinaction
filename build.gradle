//configure all subprojects
subprojects{
    apply plugin: 'java'
    compileJava.options.encoding = 'UTF-8'
    
    def srcVersion = 1.8
    def springVersion = '4.3.1.RELEASE'

    sourceCompatibility = srcVersion
    targetCompatibility = srcVersion

    version = 0.1
    group = 'net.sf.arbocdi'
    // In this section you declare where to find the dependencies of your project
    repositories {
        // Use 'jcenter' for resolving your dependencies.
        // You can declare any Maven/Ivy/file repository here.
        jcenter()
    }

    // In this section you declare the dependencies for your production and test code
    dependencies {
        // The production code uses the SLF4J logging API at compile time
        compile 'org.slf4j:slf4j-api:1.7.21'

        // Declare the dependency for your favourite test framework you want to use in your tests.
        // TestNG is also supported by the Gradle Test task. Just change the
        // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
        // 'test.useTestNG()' to your build script.
        testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
        testCompile 'junit:junit:4.12'
        compile group: 'org.springframework', name: 'spring-core', version: springVersion
        compile group: 'org.springframework', name: 'spring-context', version: springVersion
        compile group: 'org.springframework', name: 'spring-jdbc', version: springVersion
        compile group: 'org.springframework', name: 'spring-test', version: springVersion
        compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.4'
        
        compile group: 'org.projectlombok', name: 'lombok', version: '1.16.10'
    
        testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.15.1'
        testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
        

        
        compile group: 'javax.inject', name: 'javax.inject', version: '1'
    }
    task dependencies(type: Copy) {
        into "$buildDir/libs"
        from configurations.runtime
    }

}